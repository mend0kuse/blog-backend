// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// USER

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  role     String
  password String
  profile  Profile?
}

model Profile {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  name     String?
  surname  String?
  username String?
  age      String?
  avatar   String?
  currency String?
  country  String?
}

// ARTICLE

model ArticleType {
  id   Int    @id @default(autoincrement())
  name String

  articleId Int?
  Article   Article? @relation(fields: [articleId], references: [id])
}

model Article {
  id       Int    @id @default(autoincrement())
  title    String
  suptitle String
  preview  String
  views    Int

  createdAt DateTime @default(now())

  types ArticleType[]

  textBlocks  ArticleBlockText[]
  codeBlocks  ArticleBlockCode[]
  imageBlocks ArticleBlockImage[]
}

model ArticleBlockCode {
  id    Int    @id @default(autoincrement())
  code  String @db.LongText
  order Int

  articleId Int?
  Article   Article? @relation(fields: [articleId], references: [id])
}

model ArticleBlockImage {
  id    Int    @id @default(autoincrement())
  src   String
  title String
  order Int

  articleId Int?
  Article   Article? @relation(fields: [articleId], references: [id])
}

model ArticleBlockText {
  id         Int             @id @default(autoincrement())
  title      String
  order      Int
  paragraphs TextParagraph[]

  articleId Int?
  Article   Article? @relation(fields: [articleId], references: [id])
}

model TextParagraph {
  id   Int    @id @default(autoincrement())
  text String @db.LongText

  articleBlockTextId Int?
  ArticleBlockText   ArticleBlockText? @relation(fields: [articleBlockTextId], references: [id])
}
